{"version":3,"sources":["components/FilterButton.js","components/Form.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["FilterButton","props","type","className","isPressed","onClick","setFilter","name","Form","useState","setName","onSubmit","e","preventDefault","addTask","htmlFor","id","autoComplete","value","onChange","target","Todo","editFieldRef","useRef","editButtonRef","isEditing","setEditing","newName","setNewName","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00287472.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return (\n    <li className=\"todo\"> {isEditing ? editingTemplate : viewTemplate} </li>\n  );\n}\n","import { nanoid } from \"nanoid\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        name={task.name}\n        completed={task.completed}\n        id={task.id}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun}`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {FILTER_NAMES.map((name) => (\n          <FilterButton\n            key={name}\n            name={name}\n            isPressed={name === filter}\n            setFilter={setFilter}\n          />\n        ))}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList};\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n    <App tasks={DATA} />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}